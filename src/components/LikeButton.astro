---
interface Props {
  pageId: string;
}

const { pageId } = Astro.props;
---


<div class="like-container">
  <button id="likeButton" class="like-button" data-page-id={pageId}>
    <span class="like-icon">
      <svg
          width="64"
          height="64"
          viewBox="0 0 64 64"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
      >
        <!-- Rounded square -->
        <path
            class="rounded-square"
            d="M54.6 32C54.6 41.61 53.3648 47.0553 50.2101 50.2101C47.0553 53.3648 41.61 54.6 32 54.6C22.39 54.6 16.9447 53.3648 13.7899 50.2101C10.6352 47.0553 9.4 41.61 9.4 32C9.4 22.39 10.6352 16.9447 13.7899 13.7899C16.9447 10.6352 22.39 9.4 32 9.4C41.61 9.4 47.0553 10.6352 50.2101 13.7899C53.3648 16.9447 54.6 22.39 54.6 32Z"
            stroke="#141413"
            stroke-width="2.8"
            vector-effect="non-scaling-stroke"></path>
        <!-- Dots -->
        <path
            class="dot"
            data-position="bottom-right"
            d="M33.4285 40.5716C33.4285 41.3606 34.0681 42.0002 34.8571 42.0002C35.6461 42.0002 36.2856 41.3606 36.2856 40.5716C36.2856 39.7827 35.6461 39.1431 34.8571 39.1431C34.0681 39.1431 33.4285 39.7827 33.4285 40.5716Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="bottom-left"
            d="M27.7141 40.5716C27.7141 41.3606 28.3537 42.0002 29.1427 42.0002C29.9317 42.0002 30.5713 41.3606 30.5713 40.5716C30.5713 39.7827 29.9317 39.1431 29.1427 39.1431C28.3537 39.1431 27.7141 39.7827 27.7141 40.5716Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="right-bottom"
            d="M40.5714 36.2859C39.7825 36.2859 39.1429 35.6463 39.1429 34.8573C39.1429 34.0683 39.7825 33.4287 40.5714 33.4287C41.3604 33.4287 42 34.0683 42 34.8573C42 35.6463 41.3604 36.2859 40.5714 36.2859Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="right-top"
            d="M39.1429 29.1429C39.1429 29.9319 39.7825 30.5715 40.5714 30.5715C41.3604 30.5715 42 29.9319 42 29.1429C42 28.3539 41.3604 27.7144 40.5714 27.7144C39.7825 27.7144 39.1429 28.3539 39.1429 29.1429Z"
            fill="#141413"></path>

        <path
            class="big-dot"
            d="M34.8572 36.7617C33.8052 36.7617 32.9524 35.9089 32.9524 34.8569C32.9524 33.8049 33.8052 32.9521 34.8572 32.9521C35.9092 32.9521 36.762 33.8049 36.762 34.8569C36.762 35.9089 35.9092 36.7617 34.8572 36.7617Z"
            fill="#141413"></path>

        <path
            class="big-dot"
            d="M27.2381 34.8569C27.2381 35.9089 28.0909 36.7617 29.1428 36.7617C30.1948 36.7617 31.0476 35.9089 31.0476 34.8569C31.0476 33.8049 30.1948 32.9521 29.1428 32.9521C28.0909 32.9521 27.2381 33.8049 27.2381 34.8569Z"
            fill="#141413"></path>

        <path
            class="big-dot"
            d="M34.8572 31.0478C33.8052 31.0478 32.9524 30.195 32.9524 29.143C32.9524 28.0911 33.8052 27.2383 34.8572 27.2383C35.9092 27.2383 36.762 28.0911 36.762 29.143C36.762 30.195 35.9092 31.0478 34.8572 31.0478Z"
            fill="#141413"></path>

        <path
            class="big-dot"
            d="M29.1428 31.0478C28.0909 31.0478 27.2381 30.195 27.2381 29.143C27.2381 28.0911 28.0909 27.2383 29.1428 27.2383C30.1948 27.2383 31.0476 28.0911 31.0476 29.143C31.0476 30.195 30.1948 31.0478 29.1428 31.0478Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="left-bottom"
            d="M23.4286 36.2859C22.6396 36.2859 22 35.6463 22 34.8573C22 34.0683 22.6396 33.4287 23.4286 33.4287C24.2176 33.4287 24.8572 34.0683 24.8572 34.8573C24.8572 35.6463 24.2176 36.2859 23.4286 36.2859Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="left-top"
            d="M22 29.1429C22 29.9319 22.6396 30.5715 23.4286 30.5715C24.2176 30.5715 24.8572 29.9319 24.8572 29.1429C24.8572 28.3539 24.2176 27.7144 23.4286 27.7144C22.6396 27.7144 22 28.3539 22 29.1429Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="top-right"
            d="M34.8571 24.8571C34.0681 24.8571 33.4285 24.2175 33.4285 23.4286C33.4285 22.6396 34.0681 22 34.8571 22C35.6461 22 36.2856 22.6396 36.2856 23.4286C36.2856 24.2175 35.6461 24.8571 34.8571 24.8571Z"
            fill="#141413"></path>

        <path
            class="dot"
            data-position="top-left"
            d="M29.1427 24.8571C28.3537 24.8571 27.7141 24.2175 27.7141 23.4286C27.7141 22.6396 28.3537 22 29.1427 22C29.9317 22 30.5713 22.6396 30.5713 23.4286C30.5713 24.2175 29.9317 24.8571 29.1427 24.8571Z"
            fill="#141413"></path>
        <!-- Liked Event Background -->
        <path
            class="liked-event-filler"
            d="M59 32C59 43.2071 57.5749 49.8109 53.6929 53.6929C49.8109 57.5749 43.2071 59 32 59C20.7929 59 14.1891 57.5749 10.3071 53.6929C6.42511 49.8109 5 43.2071 5 32C5 20.7929 6.42511 14.1891 10.3071 10.3071C14.1891 6.42511 20.7929 5 32 5C43.2071 5 49.8109 6.42511 53.6929 10.3071C57.5749 14.1891 59 20.7929 59 32Z"
            fill="#141413"
            stroke="#141413"
            stroke-width="2"></path>
      </svg>
    </span>
  </button>
  <span class="like-count">Solid <span id="likeCounter">0</span></span>
</div>

<style>
  :root {
    --animation-timing: 1.2s cubic-bezier(0.25, 0, 0, 1);
    --scale-big: 1.333;
    --scale-small: 1.05;
    --translate-primary: 1.81px;
    --translate-secondary: 0.95px;
  }

  .like-container {
    margin-top: 55px;
    display: flex;
    position: relative;
    align-items: center;
    left: -8px;
    gap: 4px;

  }

  .like-button {
    border: none;
    padding: 0;
    background: transparent;
    cursor: pointer;
  }

  .like-button:disabled {
    cursor: default;
  }

  .like-count {
    font-variant-numeric: slashed-zero;
    font-weight: var(--font-weight-strong);
  }

  .like-icon {
    width: 64px;
    height: 64px;
  }

  .rounded-square {
    fill: var(--base);
    transform-origin: center;
    vector-effect: non-scaling-stroke;
    transition: transform 1.6s cubic-bezier(0.25, 0, 0, 1);
  }

  .dot,
  .big-dot {
    transform-origin: center;
    transition: transform 1.6s cubic-bezier(0.25, 0, 0, 1);
  }

  .liked-event-filler {
    transform: scale(0.05);
    transform-origin: center;
    opacity: 0;
    transition: transform 0.8s cubic-bezier(0.25, 0, 0, 1);
    transition-delay: 80ms;
  }

  .phase-1 .rounded-square,
  .phase-1 .big-dot {
    transform: scale(var(--scale-big));
  }

  .phase-1 .dot[data-position="bottom-right"] {
    transform: scale(var(--scale-small)) translateX(var(--translate-secondary))
    translateY(var(--translate-primary));
  }

  .phase-1 .dot[data-position="bottom-left"] {
    transform: scale(var(--scale-small))
    translateX(calc(var(--translate-secondary) * -1))
    translateY(var(--translate-primary));
  }

  .phase-1 .dot[data-position="right-bottom"] {
    transform: scale(var(--scale-small)) translateX(var(--translate-primary))
    translateY(var(--translate-secondary));
  }

  .phase-1 .dot[data-position="right-top"] {
    transform: scale(var(--scale-small)) translateX(var(--translate-primary))
    translateY(calc(var(--translate-secondary) * -1));
  }

  .phase-1 .dot[data-position="left-bottom"] {
    transform: scale(var(--scale-small))
    translateX(calc(var(--translate-primary) * -1))
    translateY(var(--translate-secondary));
  }

  .phase-1 .dot[data-position="left-top"] {
    transform: scale(var(--scale-small))
    translateX(calc(var(--translate-primary) * -1))
    translateY(calc(var(--translate-secondary) * -1));
  }

  .phase-1 .dot[data-position="top-right"] {
    transform: scale(var(--scale-small)) translateX(var(--translate-secondary))
    translateY(calc(var(--translate-primary) * -1));
  }

  .phase-1 .dot[data-position="top-left"] {
    transform: scale(var(--scale-small))
    translateX(calc(var(--translate-secondary) * -1))
    translateY(calc(var(--translate-primary) * -1));
  }

  .phase-2 .liked-event-filler {
    transform: scale(1);
    opacity: 1;
  }

  .phase-2 .dot,
  .phase-2 .big-dot {
    opacity: 0;
  }

  .phase-3 .rounded-square,
  .phase-3 .big-dot,
  .phase-3 .dot,
  .phase-3 .liked-event-filler {
    transition: opacity 1.2s cubic-bezier(0.25, 0, 0, 1),
    transform 1.2s cubic-bezier(0.25, 0, 0, 1),
    fill 1.2s cubic-bezier(0.25, 0, 0, 1);
  }

  .phase-3 .rounded-square {
    transform: scale(1);
    fill: var(--constant_black);
  }

  .phase-3 .dot,
  .phase-3 .big-dot {
    opacity: 1;
    transform: scale(1) translateX(0) translateY(0) !important;
    fill: var(--base);
  }

  .phase-3 .liked-event-filler {
    opacity: 0;
  }
</style>

<script>
  import { database } from '../lib/firebase';
  import { ref, onValue, increment, set } from 'firebase/database';

  class LikeButton {
    private button: HTMLButtonElement;
    private readonly pageId: string;
    private likeCounter: Element;
    private hasLiked: boolean;
    private secondTimer: NodeJS.Timeout;
    private thirdTimer: NodeJS.Timeout;

    constructor(button: HTMLButtonElement) {
      this.button = button;
      this.pageId = button.dataset.pageId!;
      this.likeCounter = button.closest('.like-container')!.querySelector('#likeCounter')!;
      this.hasLiked = this.checkIfLiked();

      this.initializeLikes();
      this.attachEventListeners();
    }

    private checkIfLiked(): boolean {
      const likedPages = JSON.parse(localStorage.getItem('likedPages') || '[]');

      return likedPages.includes(this.pageId);
    }

    private initializeLikes(): void {
      const likesRef = ref(database, `likes/${this.pageId}`);

      onValue(likesRef, (snapshot) => {
        const count = snapshot.val() || 0;

        this.likeCounter.textContent = count.toString();
      });

      if (this.hasLiked) {
        this.button.disabled = true;
        this.button.classList.add('phase-3');
      }
    }

    private async updateLike(): Promise<void> {
      const likesRef = ref(database, `likes/${this.pageId}`);

      await set(likesRef, increment(1));

      const likedPages = JSON.parse(localStorage.getItem('likedPages') || '[]');

      localStorage.setItem('likedPages', JSON.stringify([...likedPages, this.pageId]));

      this.hasLiked = true;
      this.button.disabled = true;
    }

    private attachEventListeners(): void {
      this.button.addEventListener('click', async () => {
        if (this.hasLiked) return;

        await this.updateLike();
      });

      this.button.addEventListener("mouseenter", () => {
        if (this.button.disabled || this.button.classList.contains("phase-3")) {
          return;
        }

        // First phase
        this.button.classList.add("phase-1");

        // Second phase
        this.secondTimer = setTimeout(async () => {
          this.button.classList.add("phase-2");

          if (!this.hasLiked) {
            await this.updateLike();
          }
        }, 1600);

        // Third phase
        this.thirdTimer = setTimeout(() => {
          this.button.classList.add("phase-3");
        }, 2480);
      });

      this.button.addEventListener("mouseleave", () => {
        if (!this.button.classList.contains("phase-2") && !this.button.classList.contains("phase-3")) {
          this.button.classList.remove("phase-1", "phase-2", "phase-3");

          clearTimeout(this.secondTimer);
          clearTimeout(this.thirdTimer);
        }
      });
    }
  }

  document.querySelectorAll<HTMLButtonElement>('.like-button').forEach(button => {
    new LikeButton(button);
  });
</script>
